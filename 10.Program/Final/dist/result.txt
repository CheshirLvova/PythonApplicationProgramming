Function to gather data from all .json files started
All data files have same structure:
Main info:
Type of entire document: dict
Document has: 13 elements
Type of every element: ['dict', 'list', 'str', 'dict', 'int', 'dict', 'dict', 'int', 'dict', 'int', 'int', 'str', 'int']:
Type of 'main' element: dict
Value of 'main':
{'temp': 272.1, 'feels_like': 261.89, 'temp_min': 272.04, 'temp_max': 272.15, 'pressure': 1017, 'humidity': 80}
Subelements of 'main':
('temp', 272.1)
('feels_like', 261.89)
('temp_min', 272.04)
('temp_max', 272.15)
('pressure', 1017)
('humidity', 80)

All data gathered
First data entry printed for example:
{
    "07-12-2020": {
        "coord": {
            "lon": 24.02,
            "lat": 49.84
        },
        "weather": [
            {
                "id": 803,
                "main": "Clouds",
                "description": "broken clouds",
                "icon": "04d"
            }
        ],
        "base": "stations",
        "main": {
            "temp": 272.1,
            "feels_like": 261.89,
            "temp_min": 272.04,
            "temp_max": 272.15,
            "pressure": 1017,
            "humidity": 80
        },
        "visibility": 10000,
        "wind": {
            "speed": 11,
            "deg": 140
        },
        "clouds": {
            "all": 75
        },
        "dt": 1607342398,
        "sys": {
            "type": 1,
            "id": 8909,
            "country": "UA",
            "sunrise": 1607321270,
            "sunset": 1607351010
        },
        "timezone": 7200,
        "id": 702550,
        "name": "Lviv",
        "cod": 200
    }
}

Print value by key: :Function to gather data from all .json files started
All data files have same structure:
Main info:
Type of entire document: dict
Document has: 13 elements
Type of every element: ['dict', 'list', 'str', 'dict', 'int', 'dict', 'dict', 'int', 'dict', 'int', 'int', 'str', 'int']:
Type of 'main' element: dict
Value of 'main':
{'temp': 272.1, 'feels_like': 261.89, 'temp_min': 272.04, 'temp_max': 272.15, 'pressure': 1017, 'humidity': 80}
Subelements of 'main':
('temp', 272.1)
('feels_like', 261.89)
('temp_min', 272.04)
('temp_max', 272.15)
('pressure', 1017)
('humidity', 80)

All data gathered
First data entry printed for example:
{
    "07-12-2020": {
        "coord": {
            "lon": 24.02,
            "lat": 49.84
        },
        "weather": [
            {
                "id": 803,
                "main": "Clouds",
                "description": "broken clouds",
                "icon": "04d"
            }
        ],
        "base": "stations",
        "main": {
            "temp": 272.1,
            "feels_like": 261.89,
            "temp_min": 272.04,
            "temp_max": 272.15,
            "pressure": 1017,
            "humidity": 80
        },
        "visibility": 10000,
        "wind": {
            "speed": 11,
            "deg": 140
        },
        "clouds": {
            "all": 75
        },
        "dt": 1607342398,
        "sys": {
            "type": 1,
            "id": 8909,
            "country": "UA",
            "sunrise": 1607321270,
            "sunset": 1607351010
        },
        "timezone": 7200,
        "id": 702550,
        "name": "Lviv",
        "cod": 200
    }
}

Print max value by key: :Function to gather data from all .json files started
All data files have same structure:
Main info:
Type of entire document: dict
Document has: 13 elements
Type of every element: ['dict', 'list', 'str', 'dict', 'int', 'dict', 'dict', 'int', 'dict', 'int', 'int', 'str', 'int']:
Type of 'main' element: dict
Value of 'main':
{'temp': 272.1, 'feels_like': 261.89, 'temp_min': 272.04, 'temp_max': 272.15, 'pressure': 1017, 'humidity': 80}
Subelements of 'main':
('temp', 272.1)
('feels_like', 261.89)
('temp_min', 272.04)
('temp_max', 272.15)
('pressure', 1017)
('humidity', 80)

All data gathered
First data entry printed for example:
{
    "07-12-2020": {
        "coord": {
            "lon": 24.02,
            "lat": 49.84
        },
        "weather": [
            {
                "id": 803,
                "main": "Clouds",
                "description": "broken clouds",
                "icon": "04d"
            }
        ],
        "base": "stations",
        "main": {
            "temp": 272.1,
            "feels_like": 261.89,
            "temp_min": 272.04,
            "temp_max": 272.15,
            "pressure": 1017,
            "humidity": 80
        },
        "visibility": 10000,
        "wind": {
            "speed": 11,
            "deg": 140
        },
        "clouds": {
            "all": 75
        },
        "dt": 1607342398,
        "sys": {
            "type": 1,
            "id": 8909,
            "country": "UA",
            "sunrise": 1607321270,
            "sunset": 1607351010
        },
        "timezone": 7200,
        "id": 702550,
        "name": "Lviv",
        "cod": 200
    }
}

Print value by key: :Function to gather data from all .json files started
All data files have same structure:
Main info:
Type of entire document: dict
Document has: 13 elements
Type of every element: ['dict', 'list', 'str', 'dict', 'int', 'dict', 'dict', 'int', 'dict', 'int', 'int', 'str', 'int']:
Type of 'main' element: dict
Value of 'main':
{'temp': 272.1, 'feels_like': 261.89, 'temp_min': 272.04, 'temp_max': 272.15, 'pressure': 1017, 'humidity': 80}
Subelements of 'main':
('temp', 272.1)
('feels_like', 261.89)
('temp_min', 272.04)
('temp_max', 272.15)
('pressure', 1017)
('humidity', 80)

All data gathered
First data entry printed for example:
{
    "07-12-2020": {
        "coord": {
            "lon": 24.02,
            "lat": 49.84
        },
        "weather": [
            {
                "id": 803,
                "main": "Clouds",
                "description": "broken clouds",
                "icon": "04d"
            }
        ],
        "base": "stations",
        "main": {
            "temp": 272.1,
            "feels_like": 261.89,
            "temp_min": 272.04,
            "temp_max": 272.15,
            "pressure": 1017,
            "humidity": 80
        },
        "visibility": 10000,
        "wind": {
            "speed": 11,
            "deg": 140
        },
        "clouds": {
            "all": 75
        },
        "dt": 1607342398,
        "sys": {
            "type": 1,
            "id": 8909,
            "country": "UA",
            "sunrise": 1607321270,
            "sunset": 1607351010
        },
        "timezone": 7200,
        "id": 702550,
        "name": "Lviv",
        "cod": 200
    }
}

Print dates with given value by key: main:Function to gather data from all .json files started
All data files have same structure:
Main info:
Type of entire document: dict
Document has: 13 elements
Type of every element: ['dict', 'list', 'str', 'dict', 'int', 'dict', 'dict', 'int', 'dict', 'int', 'int', 'str', 'int']:
Type of 'main' element: dict
Value of 'main':
{'temp': 272.1, 'feels_like': 261.89, 'temp_min': 272.04, 'temp_max': 272.15, 'pressure': 1017, 'humidity': 80}
Subelements of 'main':
('temp', 272.1)
('feels_like', 261.89)
('temp_min', 272.04)
('temp_max', 272.15)
('pressure', 1017)
('humidity', 80)

All data gathered
First data entry printed for example:
{
    "07-12-2020": {
        "coord": {
            "lon": 24.02,
            "lat": 49.84
        },
        "weather": [
            {
                "id": 803,
                "main": "Clouds",
                "description": "broken clouds",
                "icon": "04d"
            }
        ],
        "base": "stations",
        "main": {
            "temp": 272.1,
            "feels_like": 261.89,
            "temp_min": 272.04,
            "temp_max": 272.15,
            "pressure": 1017,
            "humidity": 80
        },
        "visibility": 10000,
        "wind": {
            "speed": 11,
            "deg": 140
        },
        "clouds": {
            "all": 75
        },
        "dt": 1607342398,
        "sys": {
            "type": 1,
            "id": 8909,
            "country": "UA",
            "sunrise": 1607321270,
            "sunset": 1607351010
        },
        "timezone": 7200,
        "id": 702550,
        "name": "Lviv",
        "cod": 200
    }
}

Print dates with value bigger then given by key: :